/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PetOwnerRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Pets.Pet;
import Business.Pets.PetDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WorkRequestLogic;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userinterface.NewJPanel;
import userinterface.PetOwnerRequests.SendCafeRequest;
import userinterface.PetOwnerRequests.SendGiverRequest;
import userinterface.PetOwnerRequests.SendGiverRequestJPanel;
import userinterface.PetOwnerRequests.SendGroomerRequest;
import userinterface.PetOwnerRequests.SendRequests;
import userinterface.PetOwnerRequests.SendTakerRequest;
import userinterface.PetOwnerRequests.SendVetRequest;
import userinterface.PetOwnerRequests.SendWalkerRequest;
import userinterface.Pets.AddPetsJPanel;

/**
 *
 * @author Neha Ghate
 */
public class RequestsWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestsWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private PetDirectory petDirectory;
    
    public RequestsWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise,PetDirectory petDirectory) {
        initComponents();
         this.petDirectory = petDirectory;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        valueLabel.setText(account.getEmployee().getName());
         populatePetsComboBox();
         populateOrganizationComboBox();
    }

   
    public void populatePetsComboBox(){
        
        petsComboBox.removeAllItems();
        
        for(Pet pet : petDirectory.getPetList()){
            petsComboBox.addItem(pet);
        }
    }
    
    
    public void populateOrganizationComboBox(){
        
        organizationComboBox.removeAllItems();
        for (Type type : Organization.Type.values()){
            if ((!type.getValue().equals(Type.Admin.getValue())) && (!type.getValue().equals(Type.PetOwner.getValue())))
            {
            if(type.getValue().equals(Type.PetGiver.getValue()))
                organizationComboBox.addItem(type);
           else if(type.getValue().equals(Type.PetTaker.getValue()))
                organizationComboBox.addItem(type);
           else if(type.getValue().equals(Type.PetGroomer.getValue()))
                organizationComboBox.addItem(type);
           else if(type.getValue().equals(Type.Vet.getValue()))
                organizationComboBox.addItem(type);
           else if(type.getValue().equals(Type.PetWalker.getValue()))
                organizationComboBox.addItem(type);
           
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestTestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        petsComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        addPetsButton = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        organizationComboBox = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(204, 255, 204));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 2, true));

        requestTestJButton.setText("Request Test");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        valueLabel.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(0, 102, 102));
        valueLabel.setText("<value>");

        petsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        petsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petsComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("List of Pets:");

        addPetsButton.setText("Add Pets");
        addPetsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPetsButtonActionPerformed(evt);
            }
        });

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Type of Request");

        organizationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(refreshBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(39, 39, 39)
                                .addComponent(petsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(organizationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(requestTestJButton)
                                        .addGap(68, 68, 68)
                                        .addComponent(addPetsButton))))
                            .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(206, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(valueLabel)
                .addGap(1, 1, 1)
                .addComponent(refreshBtn)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(petsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(organizationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestTestJButton)
                    .addComponent(addPetsButton))
                .addGap(43, 43, 43)
                .addComponent(backJButton)
                .addContainerGap(74, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        Pet selectedPet = (Pet) petsComboBox.getSelectedItem();
       Type selectedOrgType = (Type) organizationComboBox.getSelectedItem();
       
        WorkRequest request = null ;
         SendRequests s = null;
        if(selectedOrgType.equals(Organization.Type.PetTaker)){
             request =   WorkRequestLogic.setPetTakerRequest(selectedOrgType);
             s = new SendTakerRequest();
        }
         if(selectedOrgType.equals(Organization.Type.PetGiver)){
             request =   WorkRequestLogic.setPetGiverRequest(selectedOrgType);
              s = new SendGiverRequest();
        }
          if(selectedOrgType.equals(Organization.Type.PetGroomer)){
             request =   WorkRequestLogic.setPetGroomerRequest(selectedOrgType);
              s = new SendGroomerRequest();
        }
           if(selectedOrgType.equals(Organization.Type.PetWalker)){
             request =   WorkRequestLogic.setPetWalkerRequest(selectedOrgType);
              s = new SendWalkerRequest();
        }
           
           if(selectedOrgType.equals(Organization.Type.Vet)){
             request =   WorkRequestLogic.setVetRequest(selectedOrgType);
              s = new SendVetRequest();
        }
            
           if(selectedOrgType.equals(Organization.Type.CafeEmployee)){
             request =   WorkRequestLogic.setCafeRequest(selectedOrgType);
              s = new SendCafeRequest();
        }
           
          // BloodPacket bp = selectedPet.getBph().addBloodPacket();
       
        //LabTestWorkRequest request = new LabTestWorkRequest();
   //   request.setMessage(message);
        request.setSender(userAccount);
        request.setStatus("Sent");
        request.setPet(selectedPet);
//      //  request.setDonor(selectedPet);
//               
        userProcessContainer.add("sendRequest",s.sendRequestPanel(userProcessContainer, userAccount, selectedOrgType, selectedPet, request, enterprise));
       // userProcessContainer.add("de",new NewJPanel());
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        //SendWalkerRequestJPanel sendWalkerRequestPanel =   new SendWalkerRequestJPanel(userProcessContainer,request,selectedOrgType, userAccount,  enterprise);
//      // JPanel s.sendRequestPanel = new SendGiverRequest;
        layout.next(userProcessContainer);
//        /// if condition to select wch workrequest from selectedOrg
      
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PetOwnerWorkAreaJPanel dwjp = (PetOwnerWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void petsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_petsComboBoxActionPerformed

    private void addPetsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPetsButtonActionPerformed
        // TODO add your handling code here:

        AddPetsJPanel djp = new AddPetsJPanel(userProcessContainer,petDirectory);
        userProcessContainer.add("petsJpanel", djp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_addPetsButtonActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populatePetsComboBox();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void organizationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_organizationComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPetsButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox organizationComboBox;
    private javax.swing.JComboBox petsComboBox;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
