/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PetOwnerRequests;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Pets.Pet;
import Business.UserAccount.UserAccount;
import Business.Validator.Validator;
import Business.WorkQueue.PetGiverWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.WriteToFile;
import com.teamdev.jxbrowser.chromium.Browser;
import com.teamdev.jxbrowser.chromium.swing.BrowserView;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

/**
 *
 * @author Neha Ghate
 */
public class SendGiverRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SendGiverRequestJPanel
     */
    private JPanel userProcessContainer;
    private PetGiverWorkRequest request;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Type selectedOrgType;
    private Pet pet;

    public SendGiverRequestJPanel(JPanel userProcessContainer, WorkRequest request, Type selectedOrg, Pet pet, UserAccount account, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = (PetGiverWorkRequest) request;
        this.userAccount = account;
        this.selectedOrgType = selectedOrg;
        this.enterprise = enterprise;
        this.pet = pet;
        showDetails();
    }

    private void showDetails() {
        petDobJText.setText((String.valueOf(pet.getDob())));
        petNameJText.setText(pet.getPetName());
        petBreedJText.setText(pet.getPetBreed());
        groupButton();
        //BufferedImage bi = request.getPet().getPetImage();
        // Image myImage = ImageIO.read(request.getPet().getPetImage());
        //petImageJLabel.setIcon(new ImageIcon(bi));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        petNameJText = new javax.swing.JLabel();
        petDobJText = new javax.swing.JLabel();
        petBreedJText = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        petImageJLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reasonJTextArea = new javax.swing.JTextArea();
        requestTestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        foreverRadioBtn = new javax.swing.JRadioButton();
        timeBasedRadioBtn = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        dateTimePicker1 = new com.lavantech.gui.comp.DateTimePicker();
        hourSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(204, 255, 204));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 2, true));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Pet Name:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Pet DOB:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Pet Breed:");

        petNameJText.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        petNameJText.setForeground(new java.awt.Color(0, 102, 102));
        petNameJText.setText("Pet Name");

        petDobJText.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        petDobJText.setForeground(new java.awt.Color(0, 102, 102));
        petDobJText.setText("Pet DOB");

        petBreedJText.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        petBreedJText.setForeground(new java.awt.Color(0, 102, 102));
        petBreedJText.setText("Pet Breed");

        jLabel1.setText("Put pet for Adoption");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Reason for giving Away:");

        reasonJTextArea.setColumns(20);
        reasonJTextArea.setRows(5);
        jScrollPane1.setViewportView(reasonJTextArea);

        requestTestJButton.setText("Request Test to Giver");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        foreverRadioBtn.setBackground(new java.awt.Color(204, 255, 204));
        foreverRadioBtn.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        foreverRadioBtn.setForeground(new java.awt.Color(0, 102, 102));
        foreverRadioBtn.setSelected(true);
        foreverRadioBtn.setText("Forever");
        foreverRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foreverRadioBtnActionPerformed(evt);
            }
        });

        timeBasedRadioBtn.setBackground(new java.awt.Color(204, 255, 204));
        timeBasedRadioBtn.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        timeBasedRadioBtn.setForeground(new java.awt.Color(0, 102, 102));
        timeBasedRadioBtn.setText("Stipulated Time");
        timeBasedRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeBasedRadioBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Tenure for Giving away:");

        dateTimePicker1.setEnabled(false);
        dateTimePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTimePicker1ActionPerformed(evt);
            }
        });

        hourSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 120, 1));
        hourSpinner.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Select from date:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Enter Number of days:");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(petNameJText)
                            .addComponent(petDobJText)
                            .addComponent(petBreedJText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(petImageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton)
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(requestTestJButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(hourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(foreverRadioBtn)
                                .addGap(18, 18, 18)
                                .addComponent(timeBasedRadioBtn))
                            .addComponent(jLabel6))
                        .addContainerGap(33, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(petNameJText)
                            .addGap(25, 25, 25)
                            .addComponent(petDobJText)
                            .addGap(29, 29, 29)
                            .addComponent(petBreedJText))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(25, 25, 25)
                            .addComponent(jLabel3)
                            .addGap(29, 29, 29)
                            .addComponent(jLabel4)))
                    .addComponent(petImageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(117, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(foreverRadioBtn)
                                .addComponent(timeBasedRadioBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(8, 8, 8)
                        .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(requestTestJButton)
                                    .addComponent(backJButton))
                                .addGap(45, 45, 45))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(8, 8, 8)
                                .addComponent(hourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        String reason = reasonJTextArea.getText();
        if (Validator.isStringValid(reason)) {
            request.setPet(pet);
            request.setMessage(reason);

            if (foreverRadioBtn.isSelected()) {
                request.setTenure("Forever");
            }
            if (timeBasedRadioBtn.isSelected()) {
                request.setTenure("Short Tenure");
                request.setStartDate(dateTimePicker1.getDate());
                request.setNumberOfDays((Integer) hourSpinner.getValue());
            }
            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (selectedOrgType.getValue().equals(organization.getName())) {
                    org = organization;
                    break;
                }

            }
            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            }
            WriteToFile.getData(userAccount.getEmployee().getName() + " requested to give away a pet on " + new Date());
            JOptionPane.showMessageDialog(null, "Test is Requested sucessfully to " + selectedOrgType, "Request is created", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Empty Field,Enter a value ", "Empty Field", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void groupButton() {

        ButtonGroup bg1 = new ButtonGroup();

        bg1.add(foreverRadioBtn);
        bg1.add(timeBasedRadioBtn);

    }
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void foreverRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foreverRadioBtnActionPerformed
        // TODO add your handling code here:
        if (foreverRadioBtn.isSelected()) {
                dateTimePicker1.setEnabled(false);
                dateTimePicker1.setEditable(false);
                hourSpinner.setEnabled(false);
               // request.setStartDate(dateTimePicker1.getDate());
                //request.setNumberOfDays((Integer) hourSpinner.getValue());
            }
    }//GEN-LAST:event_foreverRadioBtnActionPerformed

    private void timeBasedRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeBasedRadioBtnActionPerformed
        // TODO add your handling code here:
        if (timeBasedRadioBtn.isSelected()) {
                //request.setTenure("Short Tenure");
                dateTimePicker1.setEnabled(true);
                dateTimePicker1.setEditable(true);
                hourSpinner.setEnabled(true);
               // request.setStartDate(dateTimePicker1.getDate());
                //request.setNumberOfDays((Integer) hourSpinner.getValue());
            }
        
    }//GEN-LAST:event_timeBasedRadioBtnActionPerformed

    private void dateTimePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTimePicker1ActionPerformed
        // TODO add your handling code here:
        if(dateTimePicker1.getDate().before(new Date())){
            JOptionPane.showMessageDialog(null, "Enter date from today ", "Select forward date", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_dateTimePicker1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private com.lavantech.gui.comp.DateTimePicker dateTimePicker1;
    private javax.swing.JRadioButton foreverRadioBtn;
    private javax.swing.JSpinner hourSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel petBreedJText;
    private javax.swing.JLabel petDobJText;
    private javax.swing.JLabel petImageJLabel;
    private javax.swing.JLabel petNameJText;
    private javax.swing.JTextArea reasonJTextArea;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JRadioButton timeBasedRadioBtn;
    // End of variables declaration//GEN-END:variables
}
