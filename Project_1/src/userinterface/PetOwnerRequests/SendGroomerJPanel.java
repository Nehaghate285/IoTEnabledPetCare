/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PetOwnerRequests;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Pets.Pet;
import Business.UserAccount.UserAccount;
import Business.Validator.ScheduleGroomingTask;
import Business.Validator.Validator;
import Business.WorkQueue.PetGroomerWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.WriteToFile;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Neha Ghate
 */
public class SendGroomerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SendGroomerJPanel
     */
    private JPanel userProcessContainer;
    private PetGroomerWorkRequest request;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Type selectedOrgType;
    private Pet pet;

    public SendGroomerJPanel(JPanel userProcessContainer, WorkRequest request, Type selectedOrg, Pet selectedPet, UserAccount account, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = (PetGroomerWorkRequest) request;
        this.userAccount = account;
        this.selectedOrgType = selectedOrg;
        this.enterprise = enterprise;
        this.pet = selectedPet;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hairCutJCheckbox = new javax.swing.JCheckBox();
        brushingJCheckbox = new javax.swing.JCheckBox();
        bathingJCheckbox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        requestTestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        dateTimePicker1 = new com.lavantech.gui.comp.DateTimePicker();
        jToggleButton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reasonJTextArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(204, 255, 204));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 2, true));

        jLabel1.setText("Put Request for Grooming");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Date & Time :");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Comments:");

        hairCutJCheckbox.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        hairCutJCheckbox.setForeground(new java.awt.Color(0, 102, 102));
        hairCutJCheckbox.setText("Hair Cut");
        hairCutJCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hairCutJCheckboxActionPerformed(evt);
            }
        });

        brushingJCheckbox.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        brushingJCheckbox.setForeground(new java.awt.Color(0, 102, 102));
        brushingJCheckbox.setText("Brushing");

        bathingJCheckbox.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        bathingJCheckbox.setForeground(new java.awt.Color(0, 102, 102));
        bathingJCheckbox.setText("Bathing");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Task:");

        requestTestJButton.setText("Request to Groomer");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        dateTimePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTimePicker1ActionPerformed(evt);
            }
        });

        jToggleButton.setText("Schedule every month");
        jToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonActionPerformed(evt);
            }
        });

        reasonJTextArea.setColumns(20);
        reasonJTextArea.setRows(5);
        jScrollPane1.setViewportView(reasonJTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton)
                                .addGap(36, 36, 36)
                                .addComponent(requestTestJButton)))
                        .addGap(0, 349, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bathingJCheckbox)
                                    .addComponent(hairCutJCheckbox)
                                    .addComponent(brushingJCheckbox)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jToggleButton)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(hairCutJCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(brushingJCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bathingJCheckbox)))
                        .addGap(34, 34, 34)
                        .addComponent(jToggleButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(73, 73, 73)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestTestJButton)
                    .addComponent(backJButton))
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hairCutJCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hairCutJCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hairCutJCheckboxActionPerformed

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        String message = reasonJTextArea.getText();
        if (Validator.isStringValid(message)) {
            Date dateOfGroomRequest = dateTimePicker1.getDate();
            if (dateOfGroomRequest != null) {
                request.setDateOfGroomRequest(dateOfGroomRequest);
            } else {
                JOptionPane.showMessageDialog(null, "Empty Field,Enter a date ", "Empty Field", JOptionPane.WARNING_MESSAGE);
            }
            //System.out.println(dateTimePicker1.getDate());
            // Instantiate Timer Object
            Timer time = new Timer();
            Calendar cal = Calendar.getInstance();
            cal.setTime(dateOfGroomRequest);
            cal.add(Calendar.DATE, 5); // add 10 days
            Date newdateOfGroomRequest;
            newdateOfGroomRequest = cal.getTime();
            ArrayList checkList = new ArrayList();

            if (hairCutJCheckbox.isSelected() == true) // if check box is checked
            {
                checkList.add("HairCut");
            }

            if (brushingJCheckbox.isSelected() == true) // if check box is checked
            {
                checkList.add("Brushing");
            }

            if (bathingJCheckbox.isSelected() == true) // if check box is checked
            {
                checkList.add("Bathing");
            }

            request.setMessage(message);
            request.setPet(pet);
            if (checkList.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Select atleast one task.", "Empty Field", JOptionPane.WARNING_MESSAGE);

            } else {
                request.setChecklist(checkList);

                Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (selectedOrgType.getValue().equals(organization.getName())) {
                        org = organization;
                        break;
                    }

                }
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
                if (jToggleButton.isSelected()) {
                    //Start the scheduler

                    ScheduleGroomingTask st = new ScheduleGroomingTask(request, newdateOfGroomRequest, org, userAccount); // Instantiate SheduledTask class
                    time.schedule(st, dateOfGroomRequest, 60000); // Create Repetitively task for every 1 min
                    //   time.scheduleAtFixedRate(st, dateOfGroomRequest, 5184000);// Create Repetitively task for every 2 months
                } else {
                    time.cancel();
                }
                WriteToFile.getData(userAccount.getEmployee().getName() + " requested to groomer on " + new Date());
                JOptionPane.showMessageDialog(null, "Test is Requested sucessfully to " + selectedOrgType, "Request is created", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Empty Field,Enter a value ", "Empty Field", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonActionPerformed

    private void dateTimePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTimePicker1ActionPerformed
        // TODO add your handling code here:
        if(dateTimePicker1.getDate().before(new Date())){
            JOptionPane.showMessageDialog(null, "Enter date from today ", "Select forward date", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_dateTimePicker1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JCheckBox bathingJCheckbox;
    private javax.swing.JCheckBox brushingJCheckbox;
    private com.lavantech.gui.comp.DateTimePicker dateTimePicker1;
    private javax.swing.JCheckBox hairCutJCheckbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton;
    private javax.swing.JTextArea reasonJTextArea;
    private javax.swing.JButton requestTestJButton;
    // End of variables declaration//GEN-END:variables
}
